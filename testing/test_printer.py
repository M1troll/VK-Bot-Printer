import unittest                                         # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã c —é–Ω–∏—Ç-—Ç–µ—Å—Ç–∞–º–∏
from printer import *                                   # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª —Å –≥–ª–∞–≤–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –ë–æ—Ç–∞


# –Æ–Ω–∏—Ç-—Ç–µ—Å—Ç—ã –¥–ª—è –º–µ—Ç–æ–¥–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ printer.py
class TestPrinter(unittest.TestCase):
    """
    –ö–ª–∞—Å—Å –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –Æ–Ω–∏—Ç-—Ç–µ—Å—Ç–∞–º–∏ –º–µ—Ç–æ–¥—ã –≥–ª–∞–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ printer.py
    """

    def setUp(self):
        """
        –ü—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç-–∫–µ–π—Å–∞ TestPrinter —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º

        :return: None
        """

        # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –∫–ª–∞—Å—Å–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã
        self.vk_session = vk_api.VkApi(token=GROUP_TOKEN, api_version=API_VERSION)  # –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
        self.vk = self.vk_session.get_api()                                         # –ø–æ–ª—É—á–∞–µ–º API

        # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –∫–ª–∞—Å—Å–∞ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.ls_session = vk_api.VkApi(token=MY_TOKEN, api_version=API_VERSION)
        self.ls_vk = self.ls_session.get_api()

    def test_send_message(self):
        """
        –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

        :return: –°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        """

        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        self.assertRaises(BaseException, send_message(MY_ID, message="–ü—Ä–∏—ë–º! –ü—Ä–æ–≤–µ—Ä–∫–∞! –ú–µ–Ω—è —Å–ª—ã—à–Ω–æ?"))
        # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–∏—à–µ–¥—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        message = self.vk.messages.getHistory(count=1,
                                              user_id=MY_ID,
                                              peer_id=MY_ID)['items'][0]['text']
        self.assertEqual("–ü—Ä–∏—ë–º! –ü—Ä–æ–≤–µ—Ä–∫–∞! –ú–µ–Ω—è —Å–ª—ã—à–Ω–æ?", message)          # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –≤–µ—Ä–Ω–æ –ª–∏ –¥–æ—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.delete_message(group=True)                                     # —É–¥–∞–ª—è–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –≤—ã—à–µ —Å–æ–æ–±—â–µ–Ω–∏—è

    def test_initialization(self):
        """
        –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞

        :return: –°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        """

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Ññ 1
        message = "–ê–±—Ä–∞-–ö@daBRa25846"
        self.ls_vk.messages.send(peer_id=-GROUP_ID,
                                 random_id=get_random_id(),
                                 message=message)
        self.delete_message(ls=True)                                        # —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Ññ1
        self.assertEqual("–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã üò¢", initialization())    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
        self.delete_message(group=True)                                     # —É–¥–∞–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Ññ 2
        message = "–†–∞—Å–ø–µ—á–∞—Ç–∞–π"
        self.ls_vk.messages.send(peer_id=-GROUP_ID,
                                 random_id=get_random_id(),
                                 message=message)
        self.delete_message(ls=True)                                        # —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Ññ2
        self.assertEqual("–í—ã –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç(", initialization())    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
        self.delete_message(group=True)                                     # —É–¥–∞–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Ññ 3
        message = "()"
        self.ls_vk.messages.send(peer_id=-GROUP_ID,
                                 random_id=get_random_id(),
                                 message=message)
        self.delete_message(ls=True)                                        # —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Ññ3
        self.assertEqual("üëâüèªüëàüèª", initialization())                           # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
        self.delete_message(group=True)                                     # —É–¥–∞–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞

    def delete_message(self, ls=False, group=False):
        """
        –£–¥–∞—è–ª–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        :param ls: –ï—Å–ª–∏ True, —Ç–æ —É–¥–∞–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        :param group: –ï—Å–ª–∏ True, —Ç–æ —É–¥–∞–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
        :return: None
        """

        if group:
            # –ø–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
            message_id = self.vk.messages.getHistory(count=1,
                                                     user_id=MY_ID,
                                                     peer_id=MY_ID)['items'][0]['id']
            # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.vk.messages.delete(message_ids=message_id,
                                    delete_for_all=1,
                                    peer_id=MY_ID)
        if ls:
            # –ø–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            message_id = self.ls_vk.messages.getHistory(count=1,
                                                        user_id=-GROUP_ID,
                                                        peer_id=-GROUP_ID)['items'][0]['id']
            # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.ls_vk.messages.delete(message_ids=message_id,
                                       delete_for_all=1,
                                       peer_id=-GROUP_ID)


# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤—ã—à–µ –∫–ª–∞—Å—Å–∞—Ö —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–ª—É—á–∞—è
if __name__ == "__main__":
    unittest.main()
